import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.feature_extraction import DictVectorizer
from sklearn.naive_bayes import GaussianNB

from sklearn import tree
import warnings
from sklearn.metrics import accuracy_score,classification_report

warnings.filterwarnings(action='ignore',category=DeprecationWarning)

data=pd.read_csv('data.csv')
cols_to_retain=['Alt','Bar','Fri','Hun','Pat','Price','Rain','Res','Type','Est']

X_feature=data[cols_to_retain]
X_dict=X_feature.T.to_dict().values()

vect=DictVectorizer(sparse=False)
X_vector=vect.fit_transform(X_dict)
print(X_vector)

X_Train=X_vector[:-1]
X_Test=X_vector[-1:]

print('Train set')
print(X_Train)
print('test set')
print(X_Test)

le=LabelEncoder()
y_train=le.fit_transform(data['Goal'][:-1])

scaler = StandardScaler()
scaler.fit(X_Test)

X_train = scaler.transform(X_Train)
X_test = scaler.transform(X_Test)

model = GaussianNB()
model.fit(X_train, y_train)
print(le.inverse_transform(model.predict(X_test)))
